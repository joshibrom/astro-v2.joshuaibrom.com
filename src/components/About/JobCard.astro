---
import { type MarkdownInstance } from 'astro';
import { type JobListing } from '../../util/jobTypes.ts';

type RawMdJob = MarkdownInstance<Record<string, any>>;

function getFrontmatter(job: RawMdJob): JobListing {
    return job.frontmatter as JobListing;
}

export interface Props {
    job: RawMdJob
}

const { job } = Astro.props;

const { title, employer, startDate, endDate } = getFrontmatter(job);

function toDate(ds: string): string {
    return Intl.DateTimeFormat('en-us').format(new Date(ds));
}
---

<div class="bg-[#171922] p-4 flex flex-col">
    <span class="text-2xl">{employer}</span>
    <h4 class="text-xl text-poimandres-pink border-b border-b-poimandres-darkerGray">{title}</h4>
    <div class="grow prose text-poimandres-white py-4">
        <Fragment set:html={job.compiledContent()} />
    </div>
    <div class="text-poimandres-bluishGrayBrighter">
        {toDate(startDate)} - {endDate ? toDate(endDate) : 'Current'}
    </div>
</div>

